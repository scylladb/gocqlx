// Code generated by "gocqlx/cmd/schemagen"; DO NOT EDIT.

package {{.PackageName}}

import (
	"github.com/scylladb/gocqlx/v2/table"
	{{- range .Imports}}
	"{{.}}"
	{{- end}}
)

// Table models.
var (
{{with .Tables}}
{{range .}}
	{{$model_name := .Name | camelize}}
		{{$model_name}} = table.New(table.Metadata {
			Name:	"{{.Name}}",
			Columns: []string{
				{{- range .OrderedColumns}}
					"{{.}}",
				{{- end}}
			},
			PartKey: []string {
				{{- range .PartitionKey}}
					"{{.Name}}",
				{{- end}}
			},
			SortKey: []string{
				{{- range .ClusteringColumns}}
					"{{.Name}}",
				{{- end}}
			},
	})
{{end}}
{{end}}
)

{{with .UserTypes}}
{{range .}}
{{- $type_name := .Name | camelize}}
{{- $field_types := .FieldTypes}}
type {{$type_name}}UserType struct {
    gocqlx.UDT
{{- range $index, $element := .FieldNames}}
    {{- $type := index $field_types $index}}
    {{. | camelize}} {{typeToString $type | mapScyllaToGoType}}
{{- end}}
}
{{- end}}
{{- end}}

{{with .Tables}}
{{range .}}
{{- $model_name := .Name | camelize}}
type {{$model_name}}Struct struct {
{{- range .Columns}}
	{{- if not (eq .Validator "empty") }}
	{{.Name | camelize}} {{.Validator | mapScyllaToGoType}}
	{{- end}}
{{- end}}
}
{{- end}}
{{- end}}
